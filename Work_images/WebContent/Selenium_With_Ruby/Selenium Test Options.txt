Selenium Test Options:
Selenium 1 Options

You can specify additional options in your testcases to control how the tests are executed and respresented on our sytem.
Our plugins make setting these Selenium RC options easy.

Selenium 2 Options

You can use the Desired Capabilities to send along the options below.
Desired Capabilities is just a key-value hash where you can specify anything you wish.

Selenium 2 Desired Capabilities example:
require "rubygems"  
require 'testingbot'   
gem "selenium-client"  
gem "selenium-webdriver"  
require "selenium-webdriver"   
require "selenium/client"  
  
caps = {  
  :browserName => "internet explorer",  
  :version => 8,  
  :platform => :WINDOWS,  
  :name => "My first test",  
  :extra => "Commit 123",  
  :idletimeout => 90,  
  :screenshot => false,  
  :maxduration => 400  
}  
urlhub = "http://API_KEY:API_SECRET@hub.testingbot.com:4444/wd/hub"  
client = Selenium::WebDriver::Remote::Http::Default.new  
client.timeout = 120  
  
@webdriver = Selenium::WebDriver.for :remote,:url => urlhub , :desired_capabilities => caps,:http_client => client  
@webdriver.navigate.to "http://www.testingbot.com/"  
puts @webdriver.title  

Ruby Example:
require "rubygems"  
require "testingbot"  
class ExampleTest < TestingBot::TestCase  
    attr_reader :browser  
      
    def setup  
        @browser = Selenium::Client::Driver.new \  
        :host => "http://hub.testingbot.com",  
        :port => 4444,  
        :browser => "firefox",  
        :url => "http://www.google.com",  
        :platform => "WINDOWS",  
        :version => 8,  
        :timeout_in_second => 60  
          
        browser.options = {  
            :screenshot     => true  
        }  
  
        browser.start_new_browser_session  
    end  
end  






